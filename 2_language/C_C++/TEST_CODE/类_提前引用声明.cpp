//1类的提前引用声明只能用来声明函数或模板参数，不能用来定义类成员(定义类成员相当于使用了构造函数，而其构造函数在cpp文件中定义，在头文件中没有)，也不能在定义类中的内联函数内使用声明类；
//2如果必须在定义类的同时使用声明类，那么必须将声明类的定义移到当前定义类的前面；
//  如果必须在定义类中使用声明类，而不用定义具体的函数体，那么这个使用声明类的函数体可以放在类外的cpp文件中，而不用移动声明类的定义；
#include<iostream>
using namespace std;
class B;
class A
{
	//B b;//不能用未定义的类定义成员
	//A(const B&b){num=b.num;}//只能在类外或非类定义的头文件中即cpp文件中使用B的成员，不能在定义时使用未定义的类的成员；
	A(const B&b);//只可以将B用作函数参数声明和模板参数声明；
	int num;
};
class B
{
public:
	int num;
};
int main()
{
	return 0;
}