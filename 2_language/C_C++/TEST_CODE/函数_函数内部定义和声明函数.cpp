#include<iostream>
using namespace std;
//结论：
//1.函数声明只能在main函数内或者外面（全局）
//2.函数定义只能在main外面作为全局声明
//3.在C++11标准中可以定义Lambda函数，相当于在函数内部定义了一个函数，而且可以把函数
//当成一个独立的个体，像变量一样进行各种传递，太强大了
//4.当然如果把函数当成一个变量一个传递也可以使用函数指针
//5.如果在各种声明中觉得对于如函数指针类型等的声明比较麻烦，可以使用函数模板，当然
//   这样也相当于扩大了参数类型识别范围；第二种方法是使用宏或typedef，宏用好可以起大作用，
//   如MFC中就用宏起了信息机制的妙用，形成了独特的结构；第三种方法是使用auto关键字，
//   让编译器自己决定；第四种方法：使用decltype()::value_type;第五种方法：如果是container类可
//   以临时定义一个对象使用成员函数value_type
int main()
{
	cout<<"测试函数声明位置==============================================================="<<endl;
	void fun();
	fun();
	{
		{
			//void generalFun();//在这里声明没有用，声明后它的作用范围只是在这个花括号内
		}
	}
	void generalFun();//只能在main函数内或外面声明
	generalFun();
	cout<<"测试在函数main函数内定义函数================================================="<<endl;
	//void inFun(int a)//编译出错，不能在函数内部定义函数
	//{
	//	cout<<a+0.01<<endl;
	//}
	//inFun(1);
	return 0;
}
void fun()
{
	//void generalFun();//在这里声明没有用，一定要在编译时即文字的前后上在调用的前面，
	//而不是在运行前面声明就可以
}
void generalFun()
{
	cout<<"Think The Way"<<endl;
}