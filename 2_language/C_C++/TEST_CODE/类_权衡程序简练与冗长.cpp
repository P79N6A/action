//1在类的定义中无论是构造函数，析构函数，类型转换函数，复制构造函数，赋值运算符，
//运算符重载等等都是一个功能的实现，构造函数除过初始化列表可以提供一些特别的
//初始化，其函数体内部也同样仅仅起到一个给成员数据赋初值的作用。这些函数基本上
//都不需要一定要定义，它们的功能完全可以通过定义一些自己命名的函数来实现。
//如果一个类内部所有的函数都是自命名函数，那么在实际使用中，程序将遵循严格的
//函数调用格式，程序的编写会比较冗长，当然这样带来的优势是，函数的自命名将会大大
//增强程序的可读性，降低数据类型的错误转化等等。类中构造函数，类型转换，运算
//符重载等的引进，将大大增强程序编写的简练，使得一个类对象能够像内置基本类型
//一样，通过简单的符号运算就能得到结果，当然内置基本类型的功能有限，通常的
//运算符也就可以满足，但类的功能就多得多，还需要定义一些更多函数，来满足更
//多具体的需求。首先普通构造函数，可以将各种多种数据直接在类对象定义时就打包到
//.对象中，如果定义另外的函数进行初始化就麻烦许多。转换构造函数，打开了其它
//类型向该类型转换的大门，它毕竟是一个构造函数，起到的仅仅是由其它类型构造该类
//对象，包括显式构造和隐式构造（自动类型转换）。复制构造函数，则是由同类对象
//构造新对象的方式。这些构造函数起的作用，顾名思义就是类对象的构造，它主要
//用于新对象的产生，类型转化。析构函数，简单的功能，就是在系统销毁类对象前
//由使用者对数据的一个预销毁处理。赋值运算符，这个函数主要是对已经存在的
//对象通过其它类型或者本类型进行赋值，赋值功能十分强大。类型转换函数，则是
//对已经存在的对象的使用方式多态，它使得类对象在被使用时，能够整合自己的数据
//对不同的类型需求，进行类型转换，表现出不同的类型，这个函数负责被引用的方式。
//另外类的其运算符
//如(),[],+,-,<<,>>,等等的重载则可以为类的某种功能或函数操作定义更加简练的符号运算。
//它们是类操作方面的简化方法。